name: Create Release

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_call:
    inputs:
      release:
        description: "The type of semantic version change to apply to the release."
        required: true
        type: string
        default: "patch"

jobs:
  create-new-release:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build
        run: go build -v ./...

      - name: Get previous version
        id: previous-version
        run: echo "VALUE=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Get next release version
        id: next-version
        run: |
          array=($(echo ${{ steps.previous-version.outputs.VALUE }} | tr . '\n'))
          target=2
          if [ ${{ inputs.release }} == "major" ]; then target=0; fi
          if [ ${{ inputs.release }} == "minor" ]; then target=1; fi
          array[$target]=$((array[$target]+1))
          if [ $target -lt 2 ]; then array[2]=0; fi
          if [ $target -lt 1 ]; then array[1]=0; fi
          output=$(IFS=. ; echo "${array[*]}")
          echo "VALUE=$output" >> $GITHUB_OUTPUT

      - name: Bump version
        run: |
          echo "${{ steps.next-version.outputs.VALUE }}" > VERSION

      - name: Generate version bump commit
        run: |
          git config user.name ${{ github.actor }}
          git config user.email '${{ github.actor }}@users.noreply.github.com'
          git commit -a -m "version bump ${{ steps.next-version.outputs.VALUE }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ github.token }}
          title: "[skip ci] Release"
          branch: release
          delete-branch: true
          labels: release_auto_version_bump

      - name: Merge
        env:
          GITHUB_TOKEN: ${{ secrets.APPROVER_PAT }}
        run: |
          gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --repo ${{github.repository}} \
            --admin --delete-branch --body "version bump ${{ steps.next-version.outputs.VALUE }}" -s

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.next-version.outputs.VALUE }}
          release_name: ${{ steps.next-version.outputs.VALUE }}
          draft: false
          commitish: main # use the latest commit on main branch (including the new version)
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./k8s-neighbours
          asset_name: k8s-neighbours
